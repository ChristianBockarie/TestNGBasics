<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="2" failed="1" ignored="0" total="6" passed="3">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="35616" started-at="2019-06-18T07:00:29Z" finished-at="2019-06-18T07:01:04Z">
    <groups>
    </groups>
    <test name="Test2" duration-ms="62" started-at="2019-06-18T07:00:29Z" finished-at="2019-06-18T07:00:29Z">
      <class name="com.Class05.TaskOne">
        <test-method status="FAIL" signature="setUp(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.Class05.TaskOne@3c0ecd4b]" name="setUp" is-config="true" duration-ms="0" started-at="2019-06-18T07:00:29Z" finished-at="2019-06-18T07:00:29Z">
          <exception class="org.testng.TestNGException">
            <message>
              <![CDATA[
Parameter 'browser' is required by BeforeMethod on method setUp but has not been marked @Optional or defined
in C:\Users\avanc\eclipse-workspace\TestNGBasics\Paralelltesting.xml]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestNGException: 
Parameter 'browser' is required by BeforeMethod on method setUp but has not been marked @Optional or defined
in C:\Users\avanc\eclipse-workspace\TestNGBasics\Paralelltesting.xml
at org.testng.internal.Parameters.createParams(Parameters.java:290)
at org.testng.internal.Parameters.createParametersForMethod(Parameters.java:359)
at org.testng.internal.Parameters.createParameters(Parameters.java:620)
at org.testng.internal.Parameters.createConfigurationParameters(Parameters.java:190)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:209)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:523)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestNGException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="tearDown()[pri:0, instance:com.Class05.TaskOne@3c0ecd4b]" name="tearDown" is-config="true" duration-ms="0" started-at="2019-06-18T07:00:29Z" finished-at="2019-06-18T07:00:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="testUsers(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.Class05.TaskOne@3c0ecd4b]" name="testUsers" duration-ms="0" started-at="2019-06-18T07:00:29Z" data-provider="setOfData" finished-at="2019-06-18T07:00:29Z">
          <exception class="org.testng.TestNGException">
            <message>
              <![CDATA[
Parameter 'browser' is required by BeforeMethod on method setUp but has not been marked @Optional or defined
in C:\Users\avanc\eclipse-workspace\TestNGBasics\Paralelltesting.xml]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestNGException: 
Parameter 'browser' is required by BeforeMethod on method setUp but has not been marked @Optional or defined
in C:\Users\avanc\eclipse-workspace\TestNGBasics\Paralelltesting.xml
at org.testng.internal.Parameters.createParams(Parameters.java:290)
at org.testng.internal.Parameters.createParametersForMethod(Parameters.java:359)
at org.testng.internal.Parameters.createParameters(Parameters.java:620)
at org.testng.internal.Parameters.createConfigurationParameters(Parameters.java:190)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:209)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:523)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestNGException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUsers -->
        <test-method status="SKIP" signature="setUp(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.Class05.TaskOne@3c0ecd4b]" name="setUp" is-config="true" duration-ms="0" started-at="2019-06-18T07:00:29Z" finished-at="2019-06-18T07:00:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="testUsers(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.Class05.TaskOne@3c0ecd4b]" name="testUsers" duration-ms="0" started-at="2019-06-18T07:00:29Z" data-provider="setOfData" finished-at="2019-06-18T07:00:29Z">
          <exception class="org.testng.TestNGException">
            <message>
              <![CDATA[
Parameter 'browser' is required by BeforeMethod on method setUp but has not been marked @Optional or defined
in C:\Users\avanc\eclipse-workspace\TestNGBasics\Paralelltesting.xml]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestNGException: 
Parameter 'browser' is required by BeforeMethod on method setUp but has not been marked @Optional or defined
in C:\Users\avanc\eclipse-workspace\TestNGBasics\Paralelltesting.xml
at org.testng.internal.Parameters.createParams(Parameters.java:290)
at org.testng.internal.Parameters.createParametersForMethod(Parameters.java:359)
at org.testng.internal.Parameters.createParameters(Parameters.java:620)
at org.testng.internal.Parameters.createConfigurationParameters(Parameters.java:190)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:209)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:523)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestNGException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUsers -->
        <test-method status="SKIP" signature="tearDown()[pri:0, instance:com.Class05.TaskOne@3c0ecd4b]" name="tearDown" is-config="true" duration-ms="0" started-at="2019-06-18T07:00:29Z" finished-at="2019-06-18T07:00:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.Class05.TaskOne -->
    </test> <!-- Test2 -->
    <test name="Test1" duration-ms="35616" started-at="2019-06-18T07:00:29Z" finished-at="2019-06-18T07:01:04Z">
      <class name="com.Class05.SauceDemo">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.Class05.SauceDemo@3e6fa38a]" name="setUp" is-config="true" duration-ms="6065" started-at="2019-06-18T07:00:29Z" finished-at="2019-06-18T07:00:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testUsers(java.lang.String, java.lang.String)[pri:0, instance:com.Class05.SauceDemo@3e6fa38a]" name="testUsers" duration-ms="6443" started-at="2019-06-18T07:00:35Z" data-provider="sauceData" finished-at="2019-06-18T07:00:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[standard_user]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[secret_sauce]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUsers -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.Class05.SauceDemo@3e6fa38a]" name="tearDown" is-config="true" duration-ms="134" started-at="2019-06-18T07:00:41Z" finished-at="2019-06-18T07:00:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.Class05.SauceDemo@3e6fa38a]" name="setUp" is-config="true" duration-ms="4166" started-at="2019-06-18T07:00:41Z" finished-at="2019-06-18T07:00:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testUsers(java.lang.String, java.lang.String)[pri:0, instance:com.Class05.SauceDemo@3e6fa38a]" name="testUsers" duration-ms="765" started-at="2019-06-18T07:00:46Z" data-provider="sauceData" finished-at="2019-06-18T07:00:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[problem_user]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[secret_sauce]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUsers -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.Class05.SauceDemo@3e6fa38a]" name="tearDown" is-config="true" duration-ms="154" started-at="2019-06-18T07:00:46Z" finished-at="2019-06-18T07:00:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.Class05.SauceDemo@3e6fa38a]" name="setUp" is-config="true" duration-ms="4456" started-at="2019-06-18T07:00:47Z" finished-at="2019-06-18T07:00:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testUsers(java.lang.String, java.lang.String)[pri:0, instance:com.Class05.SauceDemo@3e6fa38a]" name="testUsers" duration-ms="8702" started-at="2019-06-18T07:00:51Z" data-provider="sauceData" finished-at="2019-06-18T07:01:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[performance_glitch_user]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[secret_sauce]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUsers -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.Class05.SauceDemo@3e6fa38a]" name="tearDown" is-config="true" duration-ms="111" started-at="2019-06-18T07:01:00Z" finished-at="2019-06-18T07:01:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.Class05.SauceDemo@3e6fa38a]" name="setUp" is-config="true" duration-ms="4439" started-at="2019-06-18T07:01:00Z" finished-at="2019-06-18T07:01:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="testUsers(java.lang.String, java.lang.String)[pri:0, instance:com.Class05.SauceDemo@3e6fa38a]" name="testUsers" duration-ms="59" started-at="2019-06-18T07:01:04Z" data-provider="sauceData" finished-at="2019-06-18T07:01:04Z">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Keys to send should be a not null CharSequence]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Keys to send should be a not null CharSequence
at org.openqa.selenium.remote.RemoteWebElement.sendKeys(RemoteWebElement.java:97)
at utils.CommonMethods.sendText(CommonMethods.java:94)
at com.Class05.SauceDemo.testUsers(SauceDemo.java:47)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUsers -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.Class05.SauceDemo@3e6fa38a]" name="tearDown" is-config="true" duration-ms="99" started-at="2019-06-18T07:01:04Z" finished-at="2019-06-18T07:01:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.Class05.SauceDemo -->
    </test> <!-- Test1 -->
  </suite> <!-- Suite -->
</testng-results>
